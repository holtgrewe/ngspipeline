// Configuration for the NGS pipeline.

params {
    verbose = true
    printCopyMsgs = verbose
    // pipeline directory, for scripts/ folder
    pipelineDir = "/home/holtgrem/Software/ngspipeline"
	// base directory of the project, contains folders "fastq/", ...
	//baseDir = "/srv/data/holtgrem/3248"
    baseDir = "/srv/data/holtgrem/nextflow-test"
	outDir = baseDir
	// path to the FASTA dict
	genomeDict = "/home/ngsknecht/Resource/hg19/human_g1k_v37.dict"
    // path to the genome FASTA file to use for mapping against
    genome = "/home/ngsknecht/Resource/hg19/human_g1k_v37.fasta"
    // path to the DBSNP file to use for variant calling
    dbSnp = "/home/ngsknecht/Resource/dbsnp/human/dbSNP138.vcf"
    // path to CDDS BED file
    ccdsBED = "/home/ngsknecht/Resource/BED/CCDS/CCDS.20140728.merged.short.bed"
	// Path to 1000 Genomes Variant Database.
	oneKGenomes = "/home/ngsknecht/Resource/GATK/v37/1000G_phase1.indels.b37.vcf"
	// Path to Mill publication Variant Database.
	mills = "/home/ngsknecht/Resource/GATK/v37/Mills_and_1000G_gold_standard.indels.b37.vcf"
    // id for the run / wetlab id
    runID = "1234"
    // platform for the run
    runPlatform = "Illumina"
    
    // The highest checkpoint number to reach (1 -- after QC, 2 -- after mapping, 3 -- after variant calling).
    runUpToCheckpoint = 1
    
    // Configuration for FastQC.
    fastqc {
    	cpus = 8
    }
    
    // Configuration for Qualimap.
    qualimap {
    	cpus = 8
    }
    
    // Configuration for Skewer.
    skewer {
    	cpus = 8
    	// Adapters for left (parameter -x) and right (-y) reads. 
    	adaptersR1 = "${pipelineDir}/data/adapters/TruSeq3-PE-R1.fa"
    	adaptersR2 = "${pipelineDir}/data/adapters/TruSeq3-PE-R2.fa"
    }
    
    // Configuration of BWA mapping (includes piped samtools called)
    bwa {
    	total {
    		cpus = 18
    	}
    	mapping {
    		cpus = 12
    	}
    	sorting {
    		cpus = 6
    	}
    }
    
    // BAM postprocessing (merging and marking).
    bamPostproc {
    	cpus = 8
    }

	// Select variant calling scheme.
	caller = "gatk-haplotype-caller"
    
    // Freebayes variant calling
    freebayes {
    	cpus = 8
    }
    
    // GATK variant calling etc.
    gatk {
    	bamPostproc { cpus = 8 }     // overall BAM postprocessing
 		recalibrator { cpus = 8 }
      	printReads { cpus = 8 }
      	variantCalling { cpus = 8 }  // overall variant calling
      	unifiedGenotype { cpus = 8 }
      	haplotypeCaller { cpus = 8 }
      	genotypeGVCFs { cpus = 8 }
    }
}
